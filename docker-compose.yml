services:
  server:
    build: ./server
    container_name: ultittt-server
    ports:
      - '5000:5000'
    depends_on:
      - db
      - redis
    env_file:
      - ./server/.env
    command: npm start
    networks:
      - ultittt-network

  db:
    image: mongo:7.0.21
    container_name: ultittt-mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mongosh -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin --quiet /scripts/replica-set.js"]
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    ports:
      - '27017:27017'
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db
      - ./scripts:/scripts
      - ./mongodb-keyfile:/etc/mongo/mongodb-keyfile:ro
    command: mongod --bind_ip_all --replSet rs0 --auth --keyFile /etc/mongo/mongodb-keyfile
    networks:
      - ultittt-network

  redis:
    image: redis:latest
    container_name: ultittt-redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - ultittt-network

#  client:
#    container_name: ultittt-client
#    build:
#      context: ./client
##      args:
##        VITE_API_URL: "https://ultittt.org/api"
#    env_file:
#      - ./server/.env
#    ports:
#      - '8000:80'
#    networks:
#      - ultittt-network

  mongo_express:
    container_name: ultittt-mongoexpress
    image: mongo-express:1.0.2-20-alpine3.19
    restart: unless-stopped
    ports:
      - '8081:8081'
    networks:
      - ultittt-network
    depends_on:
      - db
    env_file:
      - .env

volumes:
  mongo-data:
  redis-data:

networks:
  ultittt-network:
    driver: bridge