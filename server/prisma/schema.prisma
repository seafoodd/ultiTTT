generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  username               String          @id @map("_id")
  email                  String          @unique
  password               String
  displayName            String
  location               String?
  dateOfBirth            DateTime?
  avatarUrl              String          @default("/media/default_images/default-avatar.png")
  createdAt              DateTime        @default(now())
  updatedAt              DateTime        @updatedAt
  elo                    Float           @default(1000)
  rd                     Float           @default(200)
  vol                    Float           @default(0.06)
  gameHistory1           Game[]          @relation("Player1Games")
  gameHistory2           Game[]          @relation("Player2Games")
  friendships1           Friend[]        @relation("User1Friends")
  friendships2           Friend[]        @relation("User2Friends")
  sentFriendRequests     FriendRequest[] @relation("SentFriendRequests")
  receivedFriendRequests FriendRequest[] @relation("ReceivedFriendRequests")
}

model Friend {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  user1         User     @relation("User1Friends", fields: [user1Username], references: [username])
  user1Username String
  user2         User     @relation("User2Friends", fields: [user2Username], references: [username])
  user2Username String
  createdAt     DateTime @default(now())

  @@unique([user1Username, user2Username])
}

model FriendRequest {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  from         User     @relation("SentFriendRequests", fields: [fromUsername], references: [username])
  fromUsername String
  to           User     @relation("ReceivedFriendRequests", fields: [toUsername], references: [username])
  toUsername   String
  createdAt    DateTime @default(now())
}

model Game {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  board            Json
  winner           String?
  moveHistory      Json
  createdAt        DateTime @default(now())
  player1          User?    @relation("Player1Games", fields: [player1Username], references: [username], onDelete: SetNull)
  player1Username  String?
  player1Elo       Int
  player1EloChange Int
  player2          User?    @relation("Player2Games", fields: [player2Username], references: [username], onDelete: SetNull)
  player2Username  String?
  player2Elo       Int
  player2EloChange Int
  isRanked         Boolean  @default(true)
  status           String   @default("finished")
}
